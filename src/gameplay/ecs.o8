
# What's in an entity?


:calc entity_bytes { 0 }
:macro entity_offset name size { :calc name { entity_bytes } :calc entity_bytes { entity_bytes + size } }
entity_offset ENTITY_FLAGS 1
entity_offset ENTITY_X 1
entity_offset ENTITY_Y 1
entity_offset ENTITY_SPRITE 2
entity_offset ENTITY_AI 2
#entity_offset ENTITY_other

:calc entity_count { 64 }
:calc entity_table_bytes { entity_bytes * entity_count }

# could use a bitset but is it really faster?
#:calc entity_bitset_bytes { ceil ( entity_count / 8 ) }
#:calc bitset_end { HERE + entity_bitset_bytes }
#: entity_bitset
#:org bitset_end

: entity_load_player
  i := long player_entity_init
  load v4 - vA
  i := long entity_table
  save v4 - vA
  ;

# search entities for one that matches a system
: process_entities
  # for each byte in table
  # if byte is 0, there are no entities in this set of 8
  ;




: generate_new_enemy
  # choose from table
  ecs_copy_entity
  ;


: ecs_copy_entity
  i := long enemy_ruin-dog
  load v4 - vA

  # Load address of table
  i := long entity_table_address
  load v2 - v3
  loop
    reg_set_i_v23
    load vC - vC
    while vC != 0
    math_add_u16_u8imm v2 v3 entity_bytes
  again
  # v2-v3 = entity entry
  reg_set_i_v23
  v4 := 1
  save v4 - vA
  ;


: generate_new_treasure
  ;
